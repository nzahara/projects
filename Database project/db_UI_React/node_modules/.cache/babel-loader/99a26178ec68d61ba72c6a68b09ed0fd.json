{"ast":null,"code":"import environment from '../environments/environment';\nimport axios from 'axios'; // export default class StudentLoginService {\n\nvar availableServicesSearchUrl = environment.JAVA_API_BASE_URL + '/search';\nvar fetchTutorScheduleUrl = environment.JAVA_API_BASE_URL + '/fetch/tutorschedule';\nvar registerServiceUrl = environment.JAVA_API_BASE_URL + '/student/register/';\nvar payServiceUrl = environment.JAVA_API_BASE_URL + '/student/pay/';\nvar tutorRegisterUrl = environment.JAVA_API_BASE_URL + '/register';\nvar studentRegisterUrl = environment.JAVA_API_BASE_URL + '/student/register';\nvar tutorServiceDetailsUrl = environment.JAVA_API_BASE_URL + '/tutordetails';\nvar changeServiceStatusUrl = environment.JAVA_API_BASE_URL + '/change/service/status';\nvar tutorRegisterDetailsUrl = environment.JAVA_API_BASE_URL + '/tutor/register/details';\nvar categoryListUrl = environment.JAVA_API_BASE_URL + \"/category\";\nvar serviceRegisterUrl = environment.JAVA_API_BASE_URL + \"/tutor/service/register\"; // headers;\n// constructor() {\n\nvar headers = {\n  'Content-Type': 'application/json',\n  'Accept': 'application/json',\n  'Access-Control-Allow-Origin': '*'\n}; // }\n\nexport function getAvailableServices(searchString) {\n  return axios.get(availableServicesSearchUrl, {\n    headers: headers,\n    params: {\n      'search_string': searchString\n    }\n  }).then(extractData).catch(handleError);\n}\nexport function fetchTutorSchedule(tutorScheduleId, userId) {\n  console.log(userId);\n  return axios.get(fetchTutorScheduleUrl, {\n    headers: headers,\n    params: {\n      'tutor_schedule_id': tutorScheduleId,\n      'user_id': userId\n    }\n  }).then(extractData).catch(handleError);\n}\nexport function registerForService(userId, serviceId) {\n  console.log(userId);\n  console.log(serviceId);\n  return axios.post(registerServiceUrl + userId + \"/\" + serviceId, {}, {\n    headers: headers\n  }).then(extractData).catch(handleError);\n}\nexport function payForService(userId, serviceId) {\n  console.log(userId);\n  console.log(serviceId);\n  return axios.post(payServiceUrl + userId + \"/\" + serviceId, {}, {\n    headers: headers\n  }).then(extractData).catch(handleError);\n}\nexport function tutorRegister(userId) {\n  return axios.post(tutorRegisterUrl + \"/\" + userId, {}, {\n    headers: headers\n  }).then(extractData).catch(handleError);\n}\nexport function studentRegister(userId) {\n  return axios.post(studentRegisterUrl + \"/\" + userId, {}, {\n    headers: headers\n  }).then(extractData).catch(handleError);\n}\nexport function getTutorServiceDetails(userId) {\n  return axios.get(tutorServiceDetailsUrl + \"/\" + 6, {\n    headers: headers\n  }).then(extractData).catch(handleError);\n}\nexport function changeServiceStatus(status, serviceId) {\n  return axios.post(changeServiceStatusUrl, {}, {\n    headers: headers,\n    params: {\n      'service_id': serviceId,\n      'status': status\n    }\n  }).then(extractData).catch(handleError);\n}\nexport function getTutorRegisterDetails() {\n  return axios.get(tutorRegisterDetailsUrl, {\n    headers: headers\n  }).then(extractData).catch(handleError);\n}\nexport function getCategoryList() {\n  return axios.get(categoryListUrl, {\n    headers: headers\n  }).then(extractData).catch(handleError);\n}\nexport function registerTutorService(userId, topicId, classSize, weekDay, toDate, fromDate, serviceType) {\n  return axios.post(serviceRegisterUrl, {}, {\n    headers: headers,\n    params: {\n      'userId': userId,\n      'topicId': topicId,\n      'classSize': classSize,\n      'weekDay': weekDay,\n      'toDate': toDate,\n      'fromDate': fromDate,\n      'serviceType': serviceType\n    }\n  }).then(extractData).catch(handleError);\n}\n\nfunction extractData(res) {\n  return res.data;\n}\n\nfunction handleError(response) {\n  console.log(response.error);\n  return response.error.errors.errorMessage;\n} // }","map":{"version":3,"sources":["C:\\Users\\noorz\\Documents\\DB\\Repo\\db_project\\db_UI_React\\src\\StudentLogin\\StudentLoginService.js"],"names":["environment","axios","availableServicesSearchUrl","JAVA_API_BASE_URL","fetchTutorScheduleUrl","registerServiceUrl","payServiceUrl","tutorRegisterUrl","studentRegisterUrl","tutorServiceDetailsUrl","changeServiceStatusUrl","tutorRegisterDetailsUrl","categoryListUrl","serviceRegisterUrl","headers","getAvailableServices","searchString","get","params","then","extractData","catch","handleError","fetchTutorSchedule","tutorScheduleId","userId","console","log","registerForService","serviceId","post","payForService","tutorRegister","studentRegister","getTutorServiceDetails","changeServiceStatus","status","getTutorRegisterDetails","getCategoryList","registerTutorService","topicId","classSize","weekDay","toDate","fromDate","serviceType","res","data","response","error","errors","errorMessage"],"mappings":"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","sourcesContent":["import environment from '../environments/environment';\r\nimport axios from 'axios';\r\n\r\n// export default class StudentLoginService {\r\n\r\nconst availableServicesSearchUrl = environment.JAVA_API_BASE_URL + '/search';\r\nconst fetchTutorScheduleUrl = environment.JAVA_API_BASE_URL + '/fetch/tutorschedule';\r\nconst registerServiceUrl = environment.JAVA_API_BASE_URL + '/student/register/';\r\nconst payServiceUrl = environment.JAVA_API_BASE_URL + '/student/pay/';\r\nconst tutorRegisterUrl = environment.JAVA_API_BASE_URL + '/register';\r\nconst studentRegisterUrl = environment.JAVA_API_BASE_URL + '/student/register';\r\nconst tutorServiceDetailsUrl = environment.JAVA_API_BASE_URL + '/tutordetails';\r\nconst changeServiceStatusUrl = environment.JAVA_API_BASE_URL + '/change/service/status';\r\nconst tutorRegisterDetailsUrl = environment.JAVA_API_BASE_URL + '/tutor/register/details';\r\nconst categoryListUrl = environment.JAVA_API_BASE_URL + \"/category\";\r\nconst serviceRegisterUrl = environment.JAVA_API_BASE_URL + \"/tutor/service/register\";\r\n// headers;\r\n\r\n// constructor() {\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  'Accept': 'application/json',\r\n  'Access-Control-Allow-Origin': '*'\r\n};\r\n// }\r\n\r\n\r\nexport function getAvailableServices(searchString: string) {\r\n  return axios.get(availableServicesSearchUrl, {\r\n      headers: headers,\r\n      params: {\r\n        'search_string': searchString\r\n      }\r\n    })\r\n    .then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function fetchTutorSchedule(tutorScheduleId, userId) {\r\n  console.log(userId);\r\n  return axios.get(fetchTutorScheduleUrl, {\r\n      headers: headers,\r\n      params: {\r\n        'tutor_schedule_id': tutorScheduleId,\r\n        'user_id': userId\r\n      }\r\n    })\r\n    .then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function registerForService(userId: number, serviceId: number) {\r\n  console.log(userId);\r\n  console.log(serviceId);\r\n  return axios.post(registerServiceUrl + userId + \"/\" + serviceId, {}, {\r\n    headers: headers\r\n  }).\r\n  then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function payForService(userId: number, serviceId: number) {\r\n  console.log(userId);\r\n  console.log(serviceId);\r\n  return axios.post(payServiceUrl + userId + \"/\" + serviceId, {}, {\r\n    headers: headers\r\n  }).\r\n  then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function tutorRegister(userId: number) {\r\n  return axios.post(tutorRegisterUrl + \"/\" + userId, {}, {\r\n      headers: headers\r\n    })\r\n    .then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function studentRegister(userId: number) {\r\n  return axios.post(studentRegisterUrl + \"/\" + userId, {}, {\r\n      headers: headers\r\n    })\r\n    .then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getTutorServiceDetails(userId: number) {\r\n  return axios.get(tutorServiceDetailsUrl + \"/\" + 6, {\r\n      headers: headers\r\n    })\r\n    .then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function changeServiceStatus(status: number, serviceId: number) {\r\n  return axios.post(changeServiceStatusUrl, {}, {\r\n      headers: headers,\r\n      params: {\r\n        'service_id': serviceId,\r\n        'status': status\r\n      }\r\n    })\r\n    .then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getTutorRegisterDetails() {\r\n  return axios.get(tutorRegisterDetailsUrl, {\r\n      headers: headers\r\n    })\r\n    .then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getCategoryList() {\r\n  return axios.get(categoryListUrl, {\r\n      headers: headers\r\n    })\r\n    .then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function registerTutorService(userId, topicId, classSize, weekDay, toDate, fromDate, serviceType) {\r\n\r\n  return axios.post(serviceRegisterUrl, {}, {\r\n      headers: headers,\r\n      params: {\r\n        'userId': userId,\r\n        'topicId': topicId,\r\n        'classSize': classSize,\r\n        'weekDay': weekDay,\r\n        'toDate': toDate,\r\n        'fromDate': fromDate,\r\n        'serviceType': serviceType\r\n      }\r\n    })\r\n    .then(extractData)\r\n    .catch(handleError);\r\n}\r\n\r\n\r\nfunction extractData(res: Response) {\r\n  return res.data;\r\n}\r\n\r\nfunction handleError(response: any) {\r\n  console.log(response.error);\r\n  return response.error.errors.errorMessage;\r\n}\r\n\r\n\r\n\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}