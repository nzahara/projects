{"ast":null,"code":"'use strict';\n/**\n * Cookie creation interface.\n *\n * @param {Object} doc Reference to the document.\n * @returns {Object} Session storage inspired API.\n * @public\n */\n\nmodule.exports = function bake(doc) {\n  if (!doc) doc = {};\n  if (typeof doc === 'string') doc = {\n    cookie: doc\n  };\n  if (doc.cookie === undefined) doc.cookie = ''; // Returning object\n\n  var self = {\n    /**\n     * Get the contents of a cookie.\n     *\n     * @param {String} key Name of the cookie we want to fetch.\n     * @returns {String|Undefined} Result of the cookie or nothing.\n     * @public\n     */\n    getItem: function getItem(key) {\n      var cookiesSplat = doc.cookie.split(/;\\s*/);\n\n      for (var i = 0; i < cookiesSplat.length; i++) {\n        var ps = cookiesSplat[i].split('=');\n        var k = decodeURIComponent(ps[0]);\n        if (k === key) return decodeURIComponent(ps[1]);\n      }\n    },\n\n    /**\n     * Set a new cookie.\n     *\n     * @param {String} key Name of the cookie.\n     * @param {String} value Data for the cookie.\n     * @param {Object} opts Options for the cookie setting\n     * @returns {String} Cookie.\n     * @public\n     */\n    setItem: function setItem(key, value, opts) {\n      // Checks before we start\n      if (typeof key !== 'string' || typeof value !== 'string') return false;\n      if (!opts) opts = {}; // Creating new cookie string\n\n      var newCookie = encodeURIComponent(key) + '=' + encodeURIComponent(value);\n      if (opts.hasOwnProperty('expires')) newCookie += '; expires=' + opts.expires;\n      if (opts.hasOwnProperty('path')) newCookie += '; path=' + opts.path;\n      if (opts.hasOwnProperty('domain')) newCookie += '; domain=' + opts.domain;\n      if (opts.secure) newCookie += '; secure';\n      doc.cookie = newCookie;\n      return newCookie;\n    },\n\n    /**\n     * Remove a cookie.\n     *\n     * @param {String} key Name of the cookie.\n     * @returns {Undefined} Void.\n     * @public\n     */\n    removeItem: function removeCookie(key) {\n      doc.cookie = key + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    },\n\n    /**\n     * Clear all cookies.\n     *\n     * @returns {Undefined} Void.\n     * @public\n     */\n    clear: function clear() {\n      var cookiesSplat = doc.cookie.split(/;\\s*/);\n\n      for (var i = 0; i < cookiesSplat.length; i++) {\n        self.removeItem(decodeURIComponent(cookiesSplat[i].split('=')[0]));\n      }\n    }\n  };\n  return self;\n};","map":null,"metadata":{},"sourceType":"script"}